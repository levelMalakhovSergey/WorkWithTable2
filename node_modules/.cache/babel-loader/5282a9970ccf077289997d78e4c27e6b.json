{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\TableSite\\\\tablesite\\\\src\\\\components\\\\PaginationTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable, usePagination } from \"react-table\";\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS, groupedColumns } from './colums';\nimport './table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PaginationTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = useTable({\n    columns: columns,\n    data: data\n  }, usePagination);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    state,\n    prepareRow\n  } = tableInstance;\n  const {\n    pageIndex,\n    pageSize\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: [\" \", column.render('Header'), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: page.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: [\" \", cell.render(\"Cell\"), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 57\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"page\", \" \", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 27\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"| Go To Page:  \", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: pageIndex + 1,\n          onChange: e => {\n            const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(pageNumber);\n          },\n          style: {\n            width: \"50px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pageSize,\n        onChange: e => setPageSize(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(0),\n        disabled: !canPreviousPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: \"\\u0412\\u043F\\u0435\\u0440\\u0451\\u0434 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(pageCount - 1),\n        disabled: !canNextPage,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PaginationTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = PaginationTable;\nexport default PaginationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationTable\");","map":{"version":3,"sources":["C:/Projects/TableSite/tablesite/src/components/PaginationTable.js"],"names":["React","useMemo","useTable","usePagination","MOCK_DATA","COLUMNS","groupedColumns","PaginationTable","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","gotoPage","pageCount","setPageSize","state","prepareRow","pageIndex","pageSize","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","length","e","pageNumber","target","value","Number","width"],"mappings":"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","sourcesContent":["import React, {useMemo} from 'react';\r\nimport {useTable, usePagination } from \"react-table\";\r\nimport MOCK_DATA from './MOCK_DATA.json'\r\nimport {COLUMNS, groupedColumns} from './colums'\r\nimport './table.css'\r\n\r\nconst PaginationTable = () => {\r\n    const columns = useMemo(() => COLUMNS, [])\r\n    const data = useMemo(() => MOCK_DATA, [])\r\n    const tableInstance = useTable({\r\n        columns: columns,\r\n        data: data\r\n    },usePagination)\r\n    const\r\n        {getTableProps, getTableBodyProps, headerGroups, page,\r\n            nextPage,previousPage,canNextPage,\r\n            canPreviousPage,pageOptions,gotoPage,pageCount,setPageSize, state, prepareRow} = tableInstance;\r\n      const {pageIndex, pageSize}= state;\r\n    return (\r\n        <>\r\n        <table {...getTableProps()}>\r\n\r\n            <thead>\r\n            {\r\n                headerGroups.map((headerGroup) =>\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {\r\n                            headerGroup.headers.map(column =>\r\n                                <th {...column.getHeaderProps()}> {column.render('Header')} </th>\r\n                            )\r\n                        }\r\n\r\n                    </tr>\r\n                )\r\n            }\r\n\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n            {\r\n                page.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {\r\n                                row.cells.map((cell) => <td {...cell.getCellProps()}> {cell.render(\"Cell\")} </td>)\r\n                            }\r\n\r\n                        </tr>\r\n                    )\r\n                })\r\n            }\r\n\r\n            </tbody>\r\n        </table>\r\n        <div>\r\n            <span>\r\n                page{\" \"} <strong>{pageIndex+1 } of {pageOptions.length}</strong>{\" \"}\r\n            </span>\r\n            <span>| Go To Page:  {\" \"}\r\n                <input type='number' defaultValue={pageIndex+1} onChange={e => {\r\n                    const pageNumber= e.target.value ? Number(e.target.value)-1 : 0;\r\n                    gotoPage(pageNumber)\r\n                }}\r\n                       style={{width: \"50px\"}}\r\n                />\r\n            </span>\r\n            <select value={pageSize} onChange={e => setPageSize(e)}>\r\n\r\n            </select>\r\n            <button onClick={() => gotoPage(0)} disabled={!canPreviousPage} >{'<<'}</button>\r\n            <button onClick={() => previousPage()}  disabled={!canPreviousPage}>Назад </button>\r\n            <button onClick={() => nextPage()}  disabled={!canNextPage}>Вперёд </button>\r\n            <button onClick={() => gotoPage(pageCount-1)} disabled={!canNextPage} >{'>>'}</button>\r\n        </div>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default PaginationTable;"]},"metadata":{},"sourceType":"module"}