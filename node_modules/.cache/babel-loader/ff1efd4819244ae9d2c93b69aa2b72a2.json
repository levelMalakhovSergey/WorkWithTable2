{"ast":null,"code":"export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps);\n  hooks.getRowProps.push(getRowStyles);\n  hooks.getHeaderGroupProps.push(getRowStyles);\n  hooks.getFooterGroupProps.push(getRowStyles);\n  hooks.getHeaderProps.push(getHeaderProps);\n  hooks.getCellProps.push(getCellProps);\n  hooks.getFooterProps.push(getFooterProps);\n}\nuseFlexLayout.pluginName = 'useFlexLayout';\n\nconst getTableProps = (props, _ref) => {\n  let {\n    instance\n  } = _ref;\n  return [props, {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`\n    }\n  }];\n};\n\nconst getRowStyles = (props, _ref2) => {\n  let {\n    instance\n  } = _ref2;\n  return [props, {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`\n    }\n  }];\n};\n\nconst getHeaderProps = (props, _ref3) => {\n  let {\n    column\n  } = _ref3;\n  return [props, {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth ? `${column.totalFlexWidth} 0 auto` : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`\n    }\n  }];\n};\n\nconst getCellProps = (props, _ref4) => {\n  let {\n    cell\n  } = _ref4;\n  return [props, {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`\n    }\n  }];\n};\n\nconst getFooterProps = (props, _ref5) => {\n  let {\n    column\n  } = _ref5;\n  return [props, {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth ? `${column.totalFlexWidth} 0 auto` : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`\n    }\n  }];\n};","map":{"version":3,"sources":["C:/Projects/TableSite/tablesite2/node_modules/react-table/src/plugin-hooks/useFlexLayout.js"],"names":["useFlexLayout","hooks","getTableProps","push","getRowProps","getRowStyles","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getCellProps","getFooterProps","pluginName","props","instance","style","minWidth","totalColumnsMinWidth","display","flex","column","boxSizing","totalFlexWidth","undefined","totalMinWidth","width","totalWidth","cell"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AACnCA,EAAAA,KAAK,CAACC,aAAN,CAAoBC,IAApB,CAAyBD,aAAzB;AACAD,EAAAA,KAAK,CAACG,WAAN,CAAkBD,IAAlB,CAAuBE,YAAvB;AACAJ,EAAAA,KAAK,CAACK,mBAAN,CAA0BH,IAA1B,CAA+BE,YAA/B;AACAJ,EAAAA,KAAK,CAACM,mBAAN,CAA0BJ,IAA1B,CAA+BE,YAA/B;AACAJ,EAAAA,KAAK,CAACO,cAAN,CAAqBL,IAArB,CAA0BK,cAA1B;AACAP,EAAAA,KAAK,CAACQ,YAAN,CAAmBN,IAAnB,CAAwBM,YAAxB;AACAR,EAAAA,KAAK,CAACS,cAAN,CAAqBP,IAArB,CAA0BO,cAA1B;AACD;AAEDV,aAAa,CAACW,UAAd,GAA2B,eAA3B;;AAEA,MAAMT,aAAa,GAAG,CAACU,KAAD;AAAA,MAAQ;AAAEC,IAAAA;AAAF,GAAR;AAAA,SAAyB,CAC7CD,KAD6C,EAE7C;AACEE,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAG,GAAEF,QAAQ,CAACG,oBAAqB;AADtC;AADT,GAF6C,CAAzB;AAAA,CAAtB;;AASA,MAAMX,YAAY,GAAG,CAACO,KAAD;AAAA,MAAQ;AAAEC,IAAAA;AAAF,GAAR;AAAA,SAAyB,CAC5CD,KAD4C,EAE5C;AACEE,IAAAA,KAAK,EAAE;AACLG,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,IAAI,EAAE,UAFD;AAGLH,MAAAA,QAAQ,EAAG,GAAEF,QAAQ,CAACG,oBAAqB;AAHtC;AADT,GAF4C,CAAzB;AAAA,CAArB;;AAWA,MAAMR,cAAc,GAAG,CAACI,KAAD;AAAA,MAAQ;AAAEO,IAAAA;AAAF,GAAR;AAAA,SAAuB,CAC5CP,KAD4C,EAE5C;AACEE,IAAAA,KAAK,EAAE;AACLM,MAAAA,SAAS,EAAE,YADN;AAELF,MAAAA,IAAI,EAAEC,MAAM,CAACE,cAAP,GACD,GAAEF,MAAM,CAACE,cAAe,SADvB,GAEFC,SAJC;AAKLP,MAAAA,QAAQ,EAAG,GAAEI,MAAM,CAACI,aAAc,IAL7B;AAMLC,MAAAA,KAAK,EAAG,GAAEL,MAAM,CAACM,UAAW;AANvB;AADT,GAF4C,CAAvB;AAAA,CAAvB;;AAcA,MAAMhB,YAAY,GAAG,CAACG,KAAD;AAAA,MAAQ;AAAEc,IAAAA;AAAF,GAAR;AAAA,SAAqB,CACxCd,KADwC,EAExC;AACEE,IAAAA,KAAK,EAAE;AACLM,MAAAA,SAAS,EAAE,YADN;AAELF,MAAAA,IAAI,EAAG,GAAEQ,IAAI,CAACP,MAAL,CAAYE,cAAe,SAF/B;AAGLN,MAAAA,QAAQ,EAAG,GAAEW,IAAI,CAACP,MAAL,CAAYI,aAAc,IAHlC;AAILC,MAAAA,KAAK,EAAG,GAAEE,IAAI,CAACP,MAAL,CAAYM,UAAW;AAJ5B;AADT,GAFwC,CAArB;AAAA,CAArB;;AAYA,MAAMf,cAAc,GAAG,CAACE,KAAD;AAAA,MAAQ;AAAEO,IAAAA;AAAF,GAAR;AAAA,SAAuB,CAC5CP,KAD4C,EAE5C;AACEE,IAAAA,KAAK,EAAE;AACLM,MAAAA,SAAS,EAAE,YADN;AAELF,MAAAA,IAAI,EAAEC,MAAM,CAACE,cAAP,GACD,GAAEF,MAAM,CAACE,cAAe,SADvB,GAEFC,SAJC;AAKLP,MAAAA,QAAQ,EAAG,GAAEI,MAAM,CAACI,aAAc,IAL7B;AAMLC,MAAAA,KAAK,EAAG,GAAEL,MAAM,CAACM,UAAW;AANvB;AADT,GAF4C,CAAvB;AAAA,CAAvB","sourcesContent":["export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n"]},"metadata":{},"sourceType":"module"}