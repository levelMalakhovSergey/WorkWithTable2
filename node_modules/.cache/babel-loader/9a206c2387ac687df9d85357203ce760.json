{"ast":null,"code":"export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id];\n      return String(rowValue).toLowerCase().includes(String(filterValue).toLowerCase());\n    });\n  });\n  return rows;\n};\n\ntext.autoRemove = val => !val;\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id];\n      return rowValue !== undefined ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase() : true;\n    });\n  });\n};\n\nexactText.autoRemove = val => !val;\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id];\n      return rowValue !== undefined ? String(rowValue) === String(filterValue) : true;\n    });\n  });\n};\n\nexactTextCase.autoRemove = val => !val;\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id];\n      return rowValue.includes(filterValue);\n    });\n  });\n};\n\nincludes.autoRemove = val => !val || !val.length;\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id];\n      return rowValue && rowValue.length && filterValue.every(val => rowValue.includes(val));\n    });\n  });\n};\n\nincludesAll.autoRemove = val => !val || !val.length;\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id];\n      return rowValue && rowValue.length && filterValue.some(val => rowValue.includes(val));\n    });\n  });\n};\n\nincludesSome.autoRemove = val => !val || !val.length;\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id];\n      return filterValue.includes(rowValue);\n    });\n  });\n};\n\nincludesValue.autoRemove = val => !val || !val.length;\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id];\n      return rowValue === filterValue;\n    });\n  });\n};\n\nexact.autoRemove = val => typeof val === 'undefined';\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]; // eslint-disable-next-line eqeqeq\n\n      return rowValue == filterValue;\n    });\n  });\n};\n\nequals.autoRemove = val => val == null;\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || [];\n  min = typeof min === 'number' ? min : -Infinity;\n  max = typeof max === 'number' ? max : Infinity;\n\n  if (min > max) {\n    const temp = min;\n    min = max;\n    max = temp;\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id];\n      return rowValue >= min && rowValue <= max;\n    });\n  });\n};\n\nbetween.autoRemove = val => !val || typeof val[0] !== 'number' && typeof val[1] !== 'number';","map":{"version":3,"sources":["C:/Projects/TableSite/tablesite2/node_modules/react-table/src/filterTypes.js"],"names":["text","rows","ids","filterValue","filter","row","some","id","rowValue","values","String","toLowerCase","includes","autoRemove","val","exactText","undefined","exactTextCase","length","includesAll","every","includesSome","includesValue","exact","equals","between","min","max","Infinity","temp"],"mappings":"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","sourcesContent":["export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n"]},"metadata":{},"sourceType":"module"}