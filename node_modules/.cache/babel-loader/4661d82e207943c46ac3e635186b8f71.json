{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\TableSite\\\\tablesite\\\\src\\\\components\\\\FilteringTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable, useGlobalFilter, useFilters } from \"react-table\";\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS, groupedColumns } from './colums';\nimport './table.css';\nimport GlobalFilter from \"./GlobalFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FilteringTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter\n  } = useTable({\n    columns: columns,\n    data: data\n  }, useFilters, useGlobalFilter);\n  const {\n    globalFilter\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalFilter, {\n      filter: globalFilter,\n      setFilter: setGlobalFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: [\" \", column.render('Header'), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render(\"Filter\") : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: [\" \", cell.render(\"Cell\"), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 57\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: footerGroups.map(footerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...footerGroup.getFooterGroupProps(),\n          children: footerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"td\", { ...column.getFooterProps(),\n            children: column.render(\"Footer\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FilteringTable, \"kXZ7eavyC8c6U6tYJT7giSPupHo=\", false, function () {\n  return [useTable];\n});\n\n_c = FilteringTable;\nexport default FilteringTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteringTable\");","map":{"version":3,"sources":["C:/Projects/TableSite/tablesite/src/components/FilteringTable.js"],"names":["React","useMemo","useTable","useGlobalFilter","useFilters","MOCK_DATA","COLUMNS","groupedColumns","GlobalFilter","FilteringTable","columns","data","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","canFilter","row","getRowProps","cells","cell","getCellProps","footerGroup","getFooterGroupProps","getFooterProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AACA,SAAQC,QAAR,EAAkBC,eAAlB,EAAmCC,UAAnC,QAAoD,aAApD;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAAQC,OAAR,EAAiBC,cAAjB,QAAsC,UAAtC;AACA,OAAO,aAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAMC,OAAO,GAAGT,OAAO,CAAC,MAAMK,OAAP,EAAgB,EAAhB,CAAvB;AACA,QAAMK,IAAI,GAAGV,OAAO,CAAC,MAAMI,SAAP,EAAkB,EAAlB,CAApB;AAEA,QAAM;AAACO,IAAAA,aAAD;AAAgBC,IAAAA,iBAAhB;AAAmCC,IAAAA,YAAnC;AAAiDC,IAAAA,YAAjD;AAA+DC,IAAAA,IAA/D;AAAqEC,IAAAA,UAArE;AAAgFC,IAAAA,KAAhF;AAAsFC,IAAAA;AAAtF,MACFjB,QAAQ,CAAC;AACTQ,IAAAA,OAAO,EAAEA,OADA;AAETC,IAAAA,IAAI,EAAEA;AAFG,GAAD,EAGVP,UAHU,EAGCD,eAHD,CADZ;AAKA,QAAM;AAACiB,IAAAA;AAAD,MAAiBF,KAAvB;AACA,sBACI;AAAA,4BACI,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEE,YAAtB;AAAoC,MAAA,SAAS,EAAED;AAA/C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEA,sBAAWP,aAAa,EAAxB;AAAA,8BAEI;AAAA,kBAEIE,YAAY,CAACO,GAAb,CAAkBC,WAAD,iBACb,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBAEQD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC1B,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,4BAAmCD,MAAM,CAACE,MAAP,CAAc,QAAd,CAAnC,eACI;AAAA,wBAAMF,MAAM,CAACG,SAAP,GAAmBH,MAAM,CAACE,MAAP,CAAc,QAAd,CAAnB,GAA6C;AAAnD;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAmBI,sBAAWd,iBAAiB,EAA5B;AAAA,kBAEIG,IAAI,CAACK,GAAL,CAASQ,GAAG,IAAI;AACZZ,UAAAA,UAAU,CAACY,GAAD,CAAV;AACA,8BACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,sBAEQD,GAAG,CAACE,KAAJ,CAAUV,GAAV,CAAeW,IAAD,iBAAU,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,8BAA+BD,IAAI,CAACL,MAAL,CAAY,MAAZ,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAxB;AAFR;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH,SAVD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAnBJ,eAmCI;AAAA,kBAEIZ,YAAY,CAACM,GAAb,CAAiBa,WAAW,iBACxB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBAEQD,WAAW,CAACV,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC1B,mBAAQA,MAAM,CAACW,cAAP,EAAR;AAAA,sBAEQX,MAAM,CAACE,MAAP,CAAc,QAAd;AAFR;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,cAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AA0DH,CApED;;GAAMlB,c;UAKEP,Q;;;KALFO,c;AAsEN,eAAeA,cAAf","sourcesContent":["import React, {useMemo} from 'react';\r\nimport {useTable, useGlobalFilter, useFilters} from \"react-table\";\r\nimport MOCK_DATA from './MOCK_DATA.json'\r\nimport {COLUMNS, groupedColumns} from './colums'\r\nimport './table.css'\r\nimport GlobalFilter from \"./GlobalFilter\";\r\n\r\nconst FilteringTable = () => {\r\n    const columns = useMemo(() => COLUMNS, [])\r\n    const data = useMemo(() => MOCK_DATA, [])\r\n\r\n    const {getTableProps, getTableBodyProps, headerGroups, footerGroups, rows, prepareRow,state,setGlobalFilter}=\r\n        useTable({\r\n        columns: columns,\r\n        data: data\r\n    },useFilters,useGlobalFilter)\r\n    const {globalFilter} = state\r\n    return (\r\n        <>\r\n            <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\r\n        <table {...getTableProps()}>\r\n\r\n            <thead>\r\n            {\r\n                headerGroups.map((headerGroup) =>\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {\r\n                            headerGroup.headers.map(column =>\r\n                                <th {...column.getHeaderProps()}> {column.render('Header')}\r\n                                    <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\r\n                                </th>\r\n                            )\r\n                        }\r\n\r\n                    </tr>\r\n                )\r\n            }\r\n\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n            {\r\n                rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {\r\n                                row.cells.map((cell) => <td {...cell.getCellProps()}> {cell.render(\"Cell\")} </td>)\r\n                            }\r\n\r\n                        </tr>\r\n                    )\r\n                })\r\n            }\r\n\r\n            </tbody>\r\n            <tfoot>\r\n            {\r\n                footerGroups.map(footerGroup =>\r\n                    <tr {...footerGroup.getFooterGroupProps()}>\r\n                        {\r\n                            footerGroup.headers.map(column => (\r\n                                <td {...column.getFooterProps()}>\r\n                                    {\r\n                                        column.render(\"Footer\")\r\n                                    }\r\n                                </td>))\r\n                        }\r\n                    </tr>\r\n                )\r\n            }\r\n            </tfoot>\r\n\r\n        </table>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FilteringTable;"]},"metadata":{},"sourceType":"module"}