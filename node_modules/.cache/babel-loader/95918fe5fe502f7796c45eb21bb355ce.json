{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\TableSite\\\\tablesite\\\\src\\\\components\\\\SortingTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable, useSortBy } from \"react-table\";\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS, groupedColumns } from './colums';\nimport './table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SortingTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = useTable({\n    columns: columns,\n    data: data\n  }, useSortBy);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n          children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: column.isSorted ? column.isSortedDesc ? '-' : \"+\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n            children: [\" \", cell.render(\"Cell\"), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 57\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n      children: footerGroups.map(footerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...footerGroup.getFooterGroupProps(),\n        children: footerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"td\", { ...column.getFooterProps(),\n          children: column.render(\"Footer\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SortingTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = SortingTable;\nexport default SortingTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingTable\");","map":{"version":3,"sources":["C:/Projects/TableSite/tablesite/src/components/SortingTable.js"],"names":["React","useMemo","useTable","useSortBy","MOCK_DATA","COLUMNS","groupedColumns","SortingTable","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","footerGroup","getFooterGroupProps","getFooterProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAmC,aAAnC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAAQC,OAAR,EAAiBC,cAAjB,QAAsC,UAAtC;AACA,OAAO,aAAP;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,OAAO,GAAGP,OAAO,CAAC,MAAMI,OAAP,EAAgB,EAAhB,CAAvB;AACA,QAAMI,IAAI,GAAGR,OAAO,CAAC,MAAMG,SAAP,EAAkB,EAAlB,CAApB;AACA,QAAMM,aAAa,GAAGR,QAAQ,CAAC;AAC3BM,IAAAA,OAAO,EAAEA,OADkB;AAE3BC,IAAAA,IAAI,EAAEA;AAFqB,GAAD,EAG5BN,SAH4B,CAA9B;AAIA,QAAM;AAACQ,IAAAA,aAAD;AAAgBC,IAAAA,iBAAhB;AAAmCC,IAAAA,YAAnC;AAAiDC,IAAAA,YAAjD;AAA+DC,IAAAA,IAA/D;AAAqEC,IAAAA;AAArE,MAAmFN,aAAzF;AACA,sBAEI,sBAAWC,aAAa,EAAxB;AAAA,4BAEI;AAAA,gBAEIE,YAAY,CAACI,GAAb,CAAkBC,WAAD,iBACb,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBAEQD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC1B,mBAAQA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CAAR;AAAA,qBACKF,MAAM,CAACG,MAAP,CAAc,QAAd,CADL,eAEI;AAAA,sBAAOH,MAAM,CAACI,QAAP,GACAJ,MAAM,CAACK,YAAP,GAAsB,GAAtB,GAA4B,GAD5B,GAED;AAFN;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAuBI,sBAAWd,iBAAiB,EAA5B;AAAA,gBAEIG,IAAI,CAACE,GAAL,CAASU,GAAG,IAAI;AACZX,QAAAA,UAAU,CAACW,GAAD,CAAV;AACA,4BACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,oBAEQD,GAAG,CAACE,KAAJ,CAAUZ,GAAV,CAAea,IAAD,iBAAU,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,4BAA+BD,IAAI,CAACN,MAAL,CAAY,MAAZ,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAxB;AAFR;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OAVD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAvBJ,eAuCI;AAAA,gBAEIV,YAAY,CAACG,GAAb,CAAiBe,WAAW,iBACxB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBAEQD,WAAW,CAACZ,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC1B,mBAAQA,MAAM,CAACa,cAAP,EAAR;AAAA,oBAEQb,MAAM,CAACG,MAAP,CAAc,QAAd;AAFR;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,YAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA4DH,CApED;;GAAMjB,Y;UAGoBL,Q;;;KAHpBK,Y;AAsEN,eAAeA,YAAf","sourcesContent":["import React, {useMemo} from 'react';\r\nimport {useTable, useSortBy } from \"react-table\";\r\nimport MOCK_DATA from './MOCK_DATA.json'\r\nimport {COLUMNS, groupedColumns} from './colums'\r\nimport './table.css'\r\n\r\nconst SortingTable = () => {\r\n    const columns = useMemo(() => COLUMNS, [])\r\n    const data = useMemo(() => MOCK_DATA, [])\r\n    const tableInstance = useTable({\r\n        columns: columns,\r\n        data: data\r\n    },useSortBy)\r\n    const {getTableProps, getTableBodyProps, headerGroups, footerGroups, rows, prepareRow} = tableInstance;\r\n    return (\r\n\r\n        <table {...getTableProps()}>\r\n\r\n            <thead>\r\n            {\r\n                headerGroups.map((headerGroup) =>\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {\r\n                            headerGroup.headers.map(column =>\r\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                    {column.render('Header')}\r\n                                    <span>{column.isSorted\r\n                                        ? (column.isSortedDesc ? '-' : \"+\")\r\n                                        : \"\"\r\n                                    }</span>\r\n                                </th>\r\n                            )\r\n                        }\r\n\r\n                    </tr>\r\n                )\r\n            }\r\n\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n            {\r\n                rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {\r\n                                row.cells.map((cell) => <td {...cell.getCellProps()}> {cell.render(\"Cell\")} </td>)\r\n                            }\r\n\r\n                        </tr>\r\n                    )\r\n                })\r\n            }\r\n\r\n            </tbody>\r\n            <tfoot>\r\n            {\r\n                footerGroups.map(footerGroup =>\r\n                    <tr {...footerGroup.getFooterGroupProps()}>\r\n                        {\r\n                            footerGroup.headers.map(column => (\r\n                                <td {...column.getFooterProps()}>\r\n                                    {\r\n                                        column.render(\"Footer\")\r\n                                    }\r\n                                </td>))\r\n                        }\r\n                    </tr>\r\n                )\r\n            }\r\n            </tfoot>\r\n\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default SortingTable;"]},"metadata":{},"sourceType":"module"}