{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\TableSite\\\\tablesite2\\\\src\\\\components\\\\BasicTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable } from \"react-table\";\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS, groupedColumns } from './colums';\nimport './table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = useTable({\n    columns: columns,\n    data: data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: [\" \", column.render('Header'), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n            children: [\" \", cell.render(\"Cell\"), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 57\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n      children: footerGroups.map(footerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...footerGroup.getFooterGroupProps(),\n        children: footerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"td\", { ...column.getFooterProps(),\n          children: column.render(\"Footer\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 26\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BasicTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\nexport default BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["C:/Projects/TableSite/tablesite2/src/components/BasicTable.jsx"],"names":["React","useMemo","useTable","MOCK_DATA","COLUMNS","groupedColumns","BasicTable","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","footerGroup","getFooterGroupProps","getFooterProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAAQC,OAAR,EAAkBC,cAAlB,QAAuC,UAAvC;AACA,OAAO,aAAP;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACtB,QAAMC,OAAO,GAAEN,OAAO,CAAC,MAAMG,OAAP,EAAe,EAAf,CAAtB;AACC,QAAMI,IAAI,GAAGP,OAAO,CAAC,MAAME,SAAP,EAAkB,EAAlB,CAApB;AACC,QAAMM,aAAa,GAAGP,QAAQ,CAAC;AAChCK,IAAAA,OAAO,EAAEA,OADuB;AAEhCC,IAAAA,IAAI,EAAEA;AAF0B,GAAD,CAA9B;AAID,QAAM;AAAEE,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,YAAlD;AAAgEC,IAAAA,IAAhE;AAAsEC,IAAAA;AAAtE,MAAoFN,aAA1F;AACA,sBAEI,sBAAWC,aAAa,EAAxB;AAAA,4BAEI;AAAA,gBAEYE,YAAY,CAACI,GAAb,CAAmBC,WAAD,iBACd,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBAEQD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAM,iBAC3B,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,0BAAmCD,MAAM,CAACE,MAAP,CAAc,QAAd,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ;AAFZ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAiBI,sBAAWX,iBAAiB,EAA5B;AAAA,gBAEIG,IAAI,CAACE,GAAL,CAASO,GAAG,IAAI;AACZR,QAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,4BACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,oBAEQD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAD,iBAAU,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,4BAA+BD,IAAI,CAACJ,MAAL,CAAY,MAAZ,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAxB;AAFR;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OAVD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAiCA;AAAA,gBAEKT,YAAY,CAACG,GAAb,CAAiBY,WAAW,iBACxB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBAEQD,WAAW,CAACT,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC9B,mBAAQA,MAAM,CAACU,cAAP,EAAR;AAAA,oBAEQV,MAAM,CAACE,MAAP,CAAc,QAAd;AAFR;AAAA;AAAA;AAAA;AAAA,gBADA;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ;AAFL;AAAA;AAAA;AAAA;AAAA,YAjCA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsDH,CA9DD;;GAAMhB,U;UAGqBJ,Q;;;KAHrBI,U;AAgEN,eAAeA,UAAf","sourcesContent":["import React, {useMemo} from 'react';\r\nimport {useTable} from \"react-table\";\r\nimport MOCK_DATA from './MOCK_DATA.json'\r\nimport {COLUMNS , groupedColumns} from './colums'\r\nimport './table.css'\r\nconst BasicTable = () => {\r\n   const columns= useMemo(() => COLUMNS,[])\r\n    const data = useMemo(() => MOCK_DATA, [])\r\n     const tableInstance = useTable({\r\n    columns: columns,\r\n    data: data\r\n})\r\n    const { getTableProps, getTableBodyProps, headerGroups, footerGroups, rows, prepareRow} = tableInstance;\r\n    return (\r\n\r\n        <table {...getTableProps()}>\r\n\r\n            <thead>\r\n            {\r\n                        headerGroups.map( (headerGroup) =>\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                {\r\n                                    headerGroup.headers.map( column =>\r\n                                        <th {...column.getHeaderProps()}> {column.render('Header')} </th>\r\n                                    )\r\n                                }\r\n\r\n                            </tr>\r\n                        )\r\n                   }\r\n\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n            {\r\n                rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {\r\n                                row.cells.map((cell) => <td {...cell.getCellProps()}> {cell.render(\"Cell\")} </td>)\r\n                            }\r\n\r\n                        </tr>\r\n                    )\r\n                })\r\n            }\r\n\r\n            </tbody>\r\n        <tfoot>\r\n        {\r\n             footerGroups.map(footerGroup =>\r\n                 <tr {...footerGroup.getFooterGroupProps()}>\r\n                     {\r\n                         footerGroup.headers.map(column => (\r\n                         <td {...column.getFooterProps()}>\r\n                             {\r\n                                 column.render(\"Footer\")\r\n                             }\r\n                         </td>))\r\n                     }\r\n                 </tr>\r\n             )\r\n        }\r\n        </tfoot>\r\n\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default BasicTable;"]},"metadata":{},"sourceType":"module"}