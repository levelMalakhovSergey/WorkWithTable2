[{"C:\\Projects\\TableSite\\tablesite2\\src\\index.js":"1","C:\\Projects\\TableSite\\tablesite2\\src\\reportWebVitals.js":"2","C:\\Projects\\TableSite\\tablesite2\\src\\App.js":"3","C:\\Projects\\TableSite\\tablesite2\\src\\components\\BasicTable.jsx":"4","C:\\Projects\\TableSite\\tablesite2\\src\\components\\colums.js":"5","C:\\Projects\\TableSite\\tablesite2\\src\\components\\SortingTable.js":"6","C:\\Projects\\TableSite\\tablesite2\\src\\components\\FilteringTable.js":"7","C:\\Projects\\TableSite\\tablesite2\\src\\components\\GlobalFilter.js":"8","C:\\Projects\\TableSite\\tablesite2\\src\\components\\ColumnFilter.js":"9","C:\\Projects\\TableSite\\tablesite2\\src\\components\\PaginationTable.js":"10"},{"size":459,"mtime":1646317492278,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":454,"mtime":1646561487615,"results":"14","hashOfConfig":"12"},{"size":2233,"mtime":1646389483820,"results":"15","hashOfConfig":"12"},{"size":2048,"mtime":1646474191094,"results":"16","hashOfConfig":"12"},{"size":2587,"mtime":1646401646150,"results":"17","hashOfConfig":"12"},{"size":2600,"mtime":1646471813479,"results":"18","hashOfConfig":"12"},{"size":318,"mtime":1646409681041,"results":"19","hashOfConfig":"12"},{"size":364,"mtime":1646472372357,"results":"20","hashOfConfig":"12"},{"size":2169,"mtime":1646488265523,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"178e2ug",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projects\\TableSite\\tablesite2\\src\\index.js",[],[],["55","56"],"C:\\Projects\\TableSite\\tablesite2\\src\\reportWebVitals.js",[],[],"C:\\Projects\\TableSite\\tablesite2\\src\\App.js",["57","58","59","60"],[],"C:\\Projects\\TableSite\\tablesite2\\src\\components\\BasicTable.jsx",["61"],[],"import React, {useMemo} from 'react';\r\nimport {useTable} from \"react-table\";\r\nimport MOCK_DATA from './MOCK_DATA.json'\r\nimport {COLUMNS, groupedColumns} from './colums'\r\nimport './table.css'\r\n\r\nconst BasicTable = () => {\r\n    const columns = useMemo(() => COLUMNS, [])\r\n    const data = useMemo(() => MOCK_DATA, [])\r\n    const tableInstance = useTable({\r\n        columns: columns,\r\n        data: data\r\n    })\r\n    const {getTableProps, getTableBodyProps, headerGroups, footerGroups, rows, prepareRow} = tableInstance;\r\n    return (\r\n\r\n        <table {...getTableProps()}>\r\n\r\n            <thead>\r\n            {\r\n                headerGroups.map((headerGroup) =>\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {\r\n                            headerGroup.headers.map(column =>\r\n                                <th {...column.getHeaderProps()}> {column.render('Header')} </th>\r\n                            )\r\n                        }\r\n\r\n                    </tr>\r\n                )\r\n            }\r\n\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n            {\r\n                rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {\r\n                                row.cells.map((cell) => <td {...cell.getCellProps()}> {cell.render(\"Cell\")} </td>)\r\n                            }\r\n\r\n                        </tr>\r\n                    )\r\n                })\r\n            }\r\n\r\n            </tbody>\r\n            <tfoot>\r\n            {\r\n                footerGroups.map(footerGroup =>\r\n                    <tr {...footerGroup.getFooterGroupProps()}>\r\n                        {\r\n                            footerGroup.headers.map(column => (\r\n                                <td {...column.getFooterProps()}>\r\n                                    {\r\n                                        column.render(\"Footer\")\r\n                                    }\r\n                                </td>))\r\n                        }\r\n                    </tr>\r\n                )\r\n            }\r\n            </tfoot>\r\n\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default BasicTable;","C:\\Projects\\TableSite\\tablesite2\\src\\components\\colums.js",[],[],"C:\\Projects\\TableSite\\tablesite2\\src\\components\\SortingTable.js",["62"],[],"import React, {useMemo} from 'react';\r\nimport {useTable, useSortBy } from \"react-table\";\r\nimport MOCK_DATA from './MOCK_DATA.json'\r\nimport {COLUMNS, groupedColumns} from './colums'\r\nimport './table.css'\r\n\r\nconst SortingTable = () => {\r\n    const columns = useMemo(() => COLUMNS, [])\r\n    const data = useMemo(() => MOCK_DATA, [])\r\n    const tableInstance = useTable({\r\n        columns: columns,\r\n        data: data\r\n    },useSortBy)\r\n    const {getTableProps, getTableBodyProps, headerGroups, footerGroups, rows, prepareRow} = tableInstance;\r\n    return (\r\n\r\n        <table {...getTableProps()}>\r\n\r\n            <thead>\r\n            {\r\n                headerGroups.map((headerGroup) =>\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {\r\n                            headerGroup.headers.map(column =>\r\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                    {column.render('Header')}\r\n                                    <span>{column.isSorted\r\n                                        ? (column.isSortedDesc ? '-' : \"+\")\r\n                                        : \"\"\r\n                                    }</span>\r\n                                </th>\r\n                            )\r\n                        }\r\n\r\n                    </tr>\r\n                )\r\n            }\r\n\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n            {\r\n                rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {\r\n                                row.cells.map((cell) => <td {...cell.getCellProps()}> {cell.render(\"Cell\")} </td>)\r\n                            }\r\n\r\n                        </tr>\r\n                    )\r\n                })\r\n            }\r\n\r\n            </tbody>\r\n            <tfoot>\r\n            {\r\n                footerGroups.map(footerGroup =>\r\n                    <tr {...footerGroup.getFooterGroupProps()}>\r\n                        {\r\n                            footerGroup.headers.map(column => (\r\n                                <td {...column.getFooterProps()}>\r\n                                    {\r\n                                        column.render(\"Footer\")\r\n                                    }\r\n                                </td>))\r\n                        }\r\n                    </tr>\r\n                )\r\n            }\r\n            </tfoot>\r\n\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default SortingTable;","C:\\Projects\\TableSite\\tablesite2\\src\\components\\FilteringTable.js",["63"],[],"C:\\Projects\\TableSite\\tablesite2\\src\\components\\GlobalFilter.js",[],[],"C:\\Projects\\TableSite\\tablesite2\\src\\components\\ColumnFilter.js",[],[],"C:\\Projects\\TableSite\\tablesite2\\src\\components\\PaginationTable.js",["64"],[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":12},{"ruleId":"69","severity":1,"message":"73","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":18},{"ruleId":"69","severity":1,"message":"74","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":22},{"ruleId":"69","severity":1,"message":"75","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":23},{"ruleId":"69","severity":1,"message":"76","line":4,"column":18,"nodeType":"71","messageId":"72","endLine":4,"endColumn":32},{"ruleId":"69","severity":1,"message":"76","line":4,"column":18,"nodeType":"71","messageId":"72","endLine":4,"endColumn":32},{"ruleId":"69","severity":1,"message":"76","line":4,"column":18,"nodeType":"71","messageId":"72","endLine":4,"endColumn":32},{"ruleId":"69","severity":1,"message":"76","line":4,"column":18,"nodeType":"71","messageId":"72","endLine":4,"endColumn":32},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BasicTable' is defined but never used.","'FilteringTable' is defined but never used.","'PaginationTable' is defined but never used.","'groupedColumns' is defined but never used.","no-global-assign","no-unsafe-negation"]